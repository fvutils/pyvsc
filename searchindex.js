Search.setIndex({"docnames": ["constraints", "coverage", "data_types", "debug", "features", "index", "introduction", "methods", "quickstart", "reference"], "filenames": ["constraints.rst", "coverage.rst", "data_types.rst", "debug.rst", "features.rst", "index.rst", "introduction.rst", "methods.rst", "quickstart.rst", "reference.rst"], "titles": ["PyVSC Constraints", "PyVSC Coverage", "PyVSC Data Types", "Debug", "PyVSC Features", "PyVSC Documentation", "Introduction", "PyVSC Methods", "Quickstart Guide", "API Reference"], "terms": {"ar": [0, 1, 2, 3, 6], "class": [0, 1, 3, 4, 5, 6, 7, 9], "method": [0, 2, 3, 5], "decor": [0, 1, 2, 3, 9], "dynamic_constraint": [0, 9], "virtual": 0, "can": [0, 1, 2, 3, 7], "overridden": 0, "inherit": 0, "vsc": [0, 1, 2, 3, 6, 7, 8, 9], "randobj": [0, 1, 2, 3, 6, 7, 9], "my_base_": 0, "object": [0, 1, 2, 3, 6, 7], "def": [0, 1, 2, 3, 6, 7], "__init__": [0, 1, 2, 3, 6, 7], "self": [0, 1, 2, 3, 6, 7], "rand_bit_t": [0, 2, 6, 9], "8": [0, 1, 2, 6, 9], "b": [0, 1, 2, 3, 6, 7, 8], "c": [0, 1, 2, 3, 9], "d": [0, 2], "ab_c": [0, 2, 6, 7], "my_ext_": 0, "super": [0, 1], "instanc": [0, 1, 6, 7], "ensur": [0, 1], "i": [0, 1, 2, 3, 5, 7, 9], "less": 0, "than": [0, 2], "greater": 0, "alwai": 0, "appli": [0, 1, 9], "onli": [0, 1], "when": [0, 1, 2, 3], "referenc": [0, 1], "A": [0, 1, 2, 3, 5], "us": [0, 2, 5, 6, 7, 9], "syntax": [0, 1], "similar": [0, 1, 6], "call": [0, 1, 2, 3, 7, 9], "provid": [0, 2, 3, 5, 6, 7], "an": [0, 1, 3, 6, 7, 9], "abstract": 0, "mechan": 0, "condit": 0, "without": [0, 1], "know": 0, "detail": [0, 1], "what": [0, 5], "my_cl": 0, "rand_uint8_t": [0, 2, 3, 7, 8, 9], "a_c": [0, 2, 3], "100": [0, 1, 7], "a_smal": 0, "rng": [0, 2, 9], "1": [0, 1, 2, 3, 6, 7, 9], "10": [0, 1, 2, 7, 8], "a_larg": 0, "90": 0, "my_i": 0, "randomize_with": [0, 2, 3, 6, 7, 8], "The": [0, 1, 2, 3, 6, 7], "exampl": [0, 1, 2, 3, 5, 6, 7], "abov": [0, 1, 2, 3, 7], "defin": [0, 1, 2, 6], "two": [0, 1, 2, 3, 6, 7, 9], "One": [0, 6], "rang": [0, 1, 2, 6, 7, 8, 9], "insid": [0, 4, 9], "while": [0, 1, 3], "other": [0, 1, 9], "first": [0, 1, 2, 7], "result": [0, 1], "valu": [0, 1, 5, 6, 7, 9], "across": [0, 6, 9], "full": 0, "0": [0, 1, 2, 6, 7, 9], "second": [0, 1, 2], "being": [0, 1, 9], "third": 0, "final": [0, 9], "either": [0, 1], "wai": [0, 1, 2, 3, 6, 7], "set": [0, 1, 2, 3, 7, 9], "membership": 0, "python": [0, 1, 2, 3, 6, 7], "": [0, 1, 3], "oper": [0, 2], "mai": [0, 1, 3, 9], "directli": [0, 1, 2], "simpl": [0, 1, 5], "case": [0, 1, 3, 6, 7], "more": [0, 1, 2], "complex": 0, "includ": 0, "negat": 0, "captur": [0, 2, 5, 6], "not_insid": [0, 9], "scalar": [0, 1, 4, 5, 7], "data": [0, 5, 6], "type": [0, 1, 4, 5, 6, 9], "specifi": [0, 2, 7, 9], "variabl": [0, 1, 3, 7], "stai": 0, "both": [0, 1, 2, 7], "individu": 0, "In": [0, 1, 2, 3, 7], "below": [0, 1, 6, 7], "2": [0, 1, 2, 3, 6, 7, 9], "4": [0, 1, 2, 6, 7, 9], "between": [0, 1], "inclus": 0, "right": 0, "hand": 0, "side": 0, "must": [0, 1, 2, 3], "element": [0, 2, 9], "tupl": [0, 1, 7, 9], "list": [0, 1, 5, 7, 9], "my_": [0, 2], "outsid": [0, 9], "ie": 0, "equal": [0, 4, 9], "It": [0, 1, 7], "sometim": 0, "chang": [0, 1, 2], "test": 0, "construct": [0, 1, 2, 6, 7], "member": [0, 1], "modifi": 0, "three": [0, 1], "after": [0, 1, 2, 9], "ha": [0, 1, 7, 9], "been": [0, 1, 7, 9], "creat": [0, 1, 2, 3, 6, 7, 9], "append": [0, 2, 7, 9], "add": 0, "new": 0, "clear": [0, 2, 9], "remov": [0, 1, 2], "all": [0, 1, 2, 3, 6, 9], "previous": [0, 7], "ad": 0, "extend": [0, 9], "selector": 0, "availablelist": 0, "900": 0, "selectedlist": 0, "rand_list_t": [0, 2, 9], "uint32_t": [0, 2, 9], "15": [0, 1], "available_c": 0, "sel": 0, "getselect": 0, "return": [0, 1, 7, 9], "sort": 0, "integ": [0, 1, 7], "resourc": 0, "int": [0, 9], "1000": 0, "2000": 0, "initi": [0, 2, 7], "contain": [0, 1], "produc": [0, 1, 7], "fall": 0, "thi": [0, 1, 3, 6, 7, 9], "subsequ": 0, "32": [0, 2, 9], "7": [0, 1], "3": [0, 1, 7], "distribut": [0, 9], "associ": 0, "weight": [0, 1, 5, 9], "my_c": [0, 3], "dist_a": 0, "20": [0, 1, 2], "40": 0, "80": 0, "ani": [0, 1, 2], "otherwis": 0, "legal": [0, 1], "doe": 0, "have": [0, 1, 2], "non": [0, 1, 2, 9], "zero": 0, "exclud": [0, 1], "from": [0, 1, 3, 7], "so": [0, 1, 3], "30": [0, 3], "70": 0, "shown": [0, 1], "model": [0, 1, 2, 5, 6], "By": [0, 1, 2], "default": [0, 1, 2, 3, 4], "iter": [0, 7], "current": [0, 1, 2, 6, 7], "arrai": [0, 2, 4, 9], "my_l": [0, 2], "uint8_t": [0, 1, 2, 9], "my_l_c": [0, 2], "support": [0, 1, 2, 6], "control": 0, "over": [0, 3], "whether": 0, "item": [0, 6], "index": [0, 7, 9], "here": [0, 1, 6], "request": 0, "instead": [0, 7], "idx": [0, 7, 9], "true": [0, 1, 3, 9], "explicitli": [0, 1, 7], "now": [0, 3, 6], "if_then": [0, 3, 9], "else_if": [0, 9], "claus": 0, "else_then": 0, "termin": 0, "5": [0, 1], "16": [0, 1, 2, 6, 9], "enforc": 0, "except": 0, "where": [0, 1, 9], "thei": [0, 1], "violat": 0, "hard": 0, "often": [0, 7], "relationship": 0, "which": [0, 1, 3], "anoth": [0, 9], "my_item": 0, "6": [0, 1], "singl": [0, 4, 9], "disabl": 0, "conflict": 0, "declar": [0, 2], "introduc": 0, "inlin": [0, 3, 4, 6, 7], "solv": [0, 4, 5], "order": 0, "user": [0, 1, 3, 6, 7, 9], "correspond": 0, "systemverilog": [0, 1, 2, 4, 6, 7], "befor": [0, 1, 4, 9], "te": 0, "caus": [0, 1, 3], "evenli": [0, 1], "255": [0, 6], "rand_obj": [0, 7, 9], "gener": [0, 1, 2, 6, 9], "bulk": 0, "should": [0, 1], "enabl": [0, 1, 5], "howev": 0, "base": [0, 1, 7, 9], "need": [0, 1, 3, 7], "slightli": 0, "sever": [0, 1, 2, 3], "also": [0, 1, 2, 3, 6], "allow": [0, 2, 6], "addit": [0, 1, 7], "line": 0, "show": [0, 1, 2, 6, 7], "explicit": [0, 4], "constraint_mod": [0, 4, 9], "temporarili": 0, "turn": 0, "off": 0, "For": 0, "valid": 0, "certain": 0, "might": 0, "design": 0, "respons": 0, "illeg": 0, "valid_ab_c": 0, "fals": [0, 1, 9], "invalid": 0, "qualifi": 0, "field": [0, 1, 2, 4, 6, 9], "rand_mod": [0, 9], "programmat": [0, 6], "due": 0, "overload": [0, 2], "direct": 0, "access": [0, 5], "attribut": [0, 1, 5, 9], "special": 0, "enter": 0, "raw_mod": 0, "With": 1, "my_covergroup": 1, "with_sampl": [1, 6], "bit_t": [1, 2, 9], "cp1": 1, "12": [1, 2], "my_cg_1": 1, "my_cg_2": 1, "pass": 1, "paramet": [1, 2, 3, 6], "refer": [1, 5], "goal": 1, "within": 1, "type_opt": [1, 9], "configur": [1, 3], "name": [1, 9], "descript": [1, 4], "string": [1, 7, 9], "uniqu": [1, 4, 9], "fo": 1, "If": [1, 7], "unspecifi": 1, "number": [1, 7, 9], "rel": 1, "target": [1, 3, 9], "comment": 1, "specif": [1, 2, 5, 6], "at_least": 1, "minimum": 1, "hit": 1, "each": [1, 6, 7], "auto_bin_max": 1, "64": [1, 2, 9], "maximum": 1, "automat": [1, 7], "per_inst": 1, "bool": [1, 9], "inform": [1, 2, 5, 9], "get_inst_coverag": [1, 9], "merge_inst": 1, "track": 1, "per": [1, 3], "get_coverag": [1, 9], "same": [1, 2, 7], "mayb": 1, "time": [1, 3, 7], "cg1": 1, "cg2": 1, "post": 1, "cconstruct": 1, "assign": 1, "argument": [1, 3, 7, 9], "its": [1, 2, 7], "express": [1, 4, 5], "involv": 1, "callabl": 1, "dict": [1, 6], "keyword": 1, "accept": [1, 2, 6, 7, 9], "partit": [1, 9], "bin_arrai": [1, 6, 9], "how": 1, "format": [1, 9], "consist": 1, "respect": 1, "four": [1, 2], "cover": [1, 9], "mani": 1, "enumer": [1, 2, 9], "isn": 1, "t": [1, 9], "appar": 1, "cp_t": [1, 9], "becaus": [1, 3], "consequ": 1, "bit": [1, 2, 4, 9], "unsign": [1, 2, 4, 9], "check": 1, "charact": 1, "x": 1, "mask": [1, 9], "form": [1, 3, 6], "start": [1, 9], "0x": 1, "hexadecim": 1, "0o": 1, "octal": 1, "0b": 1, "binari": 1, "match": 1, "0x80": 1, "0x8f": 1, "cg": 1, "cp_a": 1, "wildcard_bin": [1, 9], "0x8x": 1, "0xf0": 1, "locat": 1, "possibl": 1, "expand": 1, "wildcard_bin_arrai": [1, 9], "describ": [1, 9], "trim": [1, 9], "intersect": [1, 9], "those": [1, 6], "pleas": [1, 6], "note": [1, 3], "regular": 1, "val_cg": 1, "cp_val": 1, "rng_1": 1, "9": 1, "ignore_bin": [1, 4, 9], "invalid_valu": 1, "absenc": 1, "paritiont": 1, "would": 1, "divid": 1, "compos": 1, "cp2": 1, "cp1x2": 1, "iff": [1, 9], "follow": [1, 3, 6], "attach": 1, "dure": [1, 9], "overrid": [1, 4], "level": [1, 2, 3, 6, 9], "one": [1, 2, 6, 9], "lambda": [1, 7], "obtain": [1, 7], "context": 1, "signatur": 1, "pair": 1, "kei": 1, "earli": 1, "bodi": 1, "present": 1, "well": 1, "mode": 1, "requir": [1, 2], "connect": 1, "queri": [1, 3], "achiev": 1, "print": [1, 6, 7, 8], "f": [1, 9], "run": 1, "25": 1, "000000": 1, "50": 1, "increas": 1, "combin": 1, "incras": 1, "rais": 1, "total": 1, "get_coverage_report": 1, "str": [1, 7, 9], "sourc": [1, 5, 9], "textual": 1, "containin": 1, "text": 1, "get_coverage_report_model": 1, "coveragereport": 1, "collect": [1, 3, 6, 9], "report_coverag": [1, 6], "fp": 1, "none": [1, 9], "stream": 1, "stdout": 1, "let": 1, "deriv": [1, 7], "see": [1, 6], "differ": [1, 7], "output": [1, 3], "code": [1, 3, 7], "cvp": 1, "inst": [1, 9], "my_covergroup_1": 1, "were": 1, "count": 1, "percentag": 1, "librari": [1, 6], "export": 1, "interchang": 1, "accellera": 1, "standard": [1, 5], "file": 1, "Or": 1, "databas": 1, "share": 1, "write_coverage_db": 1, "filenam": 1, "fmt": 1, "libuci": 1, "persist": 1, "storag": 1, "destin": 1, "path": 1, "accord": 1, "schema": 1, "cov": 1, "avail": [1, 3], "tool": 1, "db": 1, "load": 1, "function": [1, 6, 7], "record": 1, "open": 1, "close": 1, "commerci": 1, "flow": 1, "section": [1, 6], "known": 1, "repres": [1, 9], "you": [1, 3], "advis": 1, "confirm": 1, "accuraci": 1, "relev": 1, "vendor": 1, "document": 1, "applic": 1, "engin": 1, "project": [1, 3], "issu": 1, "discuss": 1, "area": 1, "veri": 1, "graphic": 1, "read": [1, 6], "written": 1, "about": [1, 6, 9], "util": 1, "bring": 1, "metric": 1, "analysi": 1, "command": 1, "To": 1, "out": 1, "covimport": 1, "readuci": 1, "dbname": 1, "vdb": 1, "trademark": 1, "industri": 1, "softwar": 1, "inc": 1, "good": 2, "random": [2, 3, 5, 6, 9], "character": 2, "size": [2, 4, 9], "signed": 2, "constraint": [2, 3, 4, 5, 6, 7], "quick": [2, 6], "rangelist": [2, 6, 9], "wide": 2, "much": 2, "equival": 2, "stdint": 2, "h": 2, "variant": 2, "sign": [2, 4, 9], "y": [2, 4], "rand_int8_t": [2, 9], "int8_t": [2, 9], "n": [2, 4], "rand_int16_t": [2, 9], "int16_t": [2, 9], "rand_uint16_t": [2, 9], "uint16_t": [2, 9], "rand_int32_t": [2, 9], "int32_t": [2, 9], "rand_uint32_t": [2, 9], "rand_int64_t": [2, 9], "int64_t": [2, 9], "rand_uint64_t": [2, 9], "uint64_t": [2, 9], "constructor": 2, "rand_int_t": [2, 9], "int_t": [2, 9], "27": 2, "intenum": [2, 3], "enum_t": [2, 9], "rand_enum_t": [2, 3, 9], "my_e": [2, 3], "auto": [2, 3, 4], "option": [2, 3, 7, 9], "attr": [2, 9], "my_sub_": 2, "i1": 2, "rand_attr": [2, 9], "i2": 2, "get_val": [2, 8, 9], "set_val": [2, 9], "These": 2, "get": [2, 6, 9], "list_t": [2, 9], "later": 2, "my_item_c": [2, 6], "randsz_list_t": [2, 9], "whose": 2, "top": [2, 6, 9], "bound": 2, "There": 3, "situat": 3, "pyvsc": 3, "most": [3, 7], "common": 3, "diagnost": 3, "help": 3, "understand": 3, "reason": 3, "failur": 3, "execut": 3, "speed": 3, "verbos": 3, "behavior": [3, 5], "occur": 3, "basi": 3, "e": [3, 8, 9], "solve_fail_debug": 3, "forc": 3, "trigger": [3, 9], "creation": 3, "problem": 3, "unknown": 3, "global": [3, 7], "vsc_solvefail_debug": 3, "environ": 3, "quit": 3, "consum": 3, "done": 3, "via": 3, "srcinfo": 3, "block": [3, 5, 9], "fun": 3, "partsel": 3, "rand": [3, 9], "ve": 3, "unit": 3, "test_solve_failur": 3, "py": 3, "38": 3, "vsc_capture_srcinfo": 3, "pss": 4, "unari": 4, "enum": [4, 5, 9], "fix": 4, "dynam": 4, "sum": [4, 9], "reduct": 4, "OR": 4, "AND": [4, 9], "xor": 4, "part": 4, "select": [4, 5], "msb": 4, "lsb": 4, "dist": [4, 9], "soft": [4, 9], "foreach": [4, 9], "foral": [4, 9], "pre_random": [4, 9], "post_random": [4, 9], "coverag": [4, 5, 6], "covergroup": [4, 5, 6, 9], "bin": [4, 6, 9], "illegal_bin": [4, 9], "coverpoint": [4, 5, 6, 9], "transit": 4, "cross": [4, 6, 9], "content": 5, "introduct": 5, "contributor": 5, "quickstart": 5, "guid": 5, "instal": 5, "width": [5, 9], "arbitrari": [5, 9], "statement": 5, "custom": 5, "sampl": [5, 6, 9], "api": [5, 6], "report": [5, 6], "save": 5, "manag": 5, "stabil": 5, "featur": [5, 6], "debug": 5, "fail": 5, "domain": [5, 6], "languag": [5, 6], "implement": 6, "verif": 6, "stimulu": 6, "capabl": 6, "orient": 6, "embed": 6, "built": 6, "friendli": 6, "mix": 6, "great": 6, "overview": 6, "seri": 6, "link": 6, "fundament": 6, "make": 6, "style": 6, "Not": 6, "some": 6, "comparison": 6, "compar": 6, "import": [6, 8], "my_cg": 6, "a_cp": 6, "space": 6, "a_bin": 6, "b_cp": 6, "b_bin": 6, "ab_cross": 6, "my_cg_i": 6, "my_item_i": 6, "keep": 6, "composit": 7, "subject": 7, "maintain": 7, "own": 7, "state": 7, "establish": 7, "packag": 7, "randstat": 7, "store": 7, "manipul": 7, "copi": 7, "sequenc": 7, "twice": 7, "item_c": 7, "ci": 7, "v1": 7, "v2": 7, "rs1": 7, "mkfromse": 7, "set_randst": 7, "_": [7, 8], "randse": 7, "prefer": 7, "seed": 7, "independ": 7, "abc": 7, "rs2": 7, "perform": 7, "procedur": 7, "randcas": 7, "purpos": 7, "candid": 7, "hist": 7, "vari": 7, "work": 7, "task": 7, "invok": 7, "could": 7, "pip": 8, "cd": 8, "wrap": 9, "recogn": 9, "datatyp": 9, "constraint_t": 9, "en": 9, "set_model": 9, "m": 9, "elab": 9, "dynamic_constraint_t": 9, "call_closur": 9, "arg": 9, "kwarg": 9, "val": 9, "w": 9, "lh": 9, "else_then_c": 9, "impli": 9, "target_typ": 9, "l": 9, "idx_term_c": 9, "to_expr": 9, "it_term_c": 9, "em": 9, "solve_ord": 9, "mark": 9, "v": 9, "expr": 9, "bin_expr": 9, "op": 9, "rh": 9, "dynamic_constraint_proxi": 9, "expr_subscript": 9, "low": 9, "high": 9, "field_info": 9, "is_composit": 9, "set_is_rand": 9, "is_rand": 9, "type_bas": 9, "is_sign": 9, "primit": 9, "particip": 9, "get_model": 9, "build_field_model": 9, "properti": 9, "clone": 9, "type_bool": 9, "boolean": 9, "type_enum": 9, "id": 9, "bool_t": 9, "sz": 9, "is_randsz": 9, "init": 9, "product": 9, "build_cov_model": 9, "parent": 9, "exclude_bin": 9, "rangelistmodel": 9, "nbin": 9, "eg": 9, "compris": 9, "wildcard": 9, "excluded_bin": 9, "0x82x": 9, "0x820": 9, "0xff0": 9, "binsof": 9, "cp": 9, "cp_m": 9, "target_l": 9, "field_composite_model": 9, "fieldcompositemodel": 9, "rand_if": 9, "is_declared_rand": 9, "set_used_rand": 9, "build": 9, "builder": 9, "add_field": 9, "fieldmodel": 9, "get_field": 9, "set_field": 9, "find_field": 9, "add_constraint": 9, "get_constraint": 9, "add_dynamic_constraint": 9, "constraint_l": 9, "field_l": 9, "process": 9, "propag": 9, "event": 9, "dispos": 9, "constraint_block_model": 9, "constraintblockmodel": 9, "set_constraint_en": 9, "deep": 9, "constraintmodel": 9, "constraint_expr_model": 9, "constraintexprmodel": 9, "btor": 9, "visitor": 9, "constraint_if_else_model": 9, "constraintifelsemodel": 9, "cond": 9, "exprmodel": 9, "true_c": 9, "constraintscopemodel": 9, "false_c": 9, "constraint_implies_model": 9, "constraintimpliesmodel": 9, "get_nod": 9, "node_l": 9, "constraint_model": 9, "boolectornod": 9, "static": 9, "and_nodelist": 9, "node": 9, "constraint_scope_model": 9, "addconstraint": 9, "constraint_unique_model": 9, "constraintuniquemodel": 9, "unique_l": 9, "covergroup_model": 9, "covergroupmodel": 9, "add_coverpoint": 9, "coverage_ev": 9, "bin_idx": 9, "dump": 9, "ind": 9, "oth": 9, "covergroup_registri": 9, "covergroupregistri": 9, "coverpoint_bin_array_model": 9, "coverpointbinarraymodel": 9, "bin_idx_bas": 9, "get_bin_expr": 9, "get_bin_nam": 9, "get_bin_rang": 9, "get_n_bin": 9, "hit_idx": 9, "coverpoint_bin_collection_model": 9, "coverpointbincollectionmodel": 9, "debug_en": 9, "add_bin": 9, "bin_m": 9, "coverpointbinmodelbas": 9, "get_hit": 9, "set_bin_typ": 9, "bin_typ": 9, "mk_collect": 9, "n_bin": 9, "coverpoint_bin_enum_model": 9, "coverpointbinenummodel": 9, "coverpoint_bin_model_bas": 9, "coverpoint_bin_single_bag_model": 9, "coverpointbinsinglebagmodel": 9, "binspec": 9, "coverpoint_bin_single_range_model": 9, "coverpointbinsinglerangemodel": 9, "target_val_low": 9, "target_val_high": 9, "coverpoint_bin_single_val_model": 9, "coverpointbinsinglevalmodel": 9, "target_v": 9, "coverpoint_cross_model": 9, "coverpointcrossmodel": 9, "set_target_value_cach": 9, "reset": 9, "select_unhit_bin": 9, "r": 9, "randif": 9, "get_bin_hit": 9, "coverpoint_m": 9, "coverpoint_model": 9, "coverpointmodel": 9, "add_bin_model": 9, "add_ignore_bin_model": 9, "add_illegal_bin_model": 9, "float": 9, "signal": 9, "uncov": 9, "get_n_ignore_bin": 9, "get_n_illegal_bin": 9, "get_n_hit_bin": 9, "get_ignore_bin_hit": 9, "get_illegal_bin_hit": 9, "get_ignore_bin_nam": 9, "get_illegal_bin_nam": 9, "get_hit_bin": 9, "bin_l": 9, "rangelist_model": 9, "rl": 9, "add_valu": 9, "add_rang": 9, "compact": 9, "overlap": 9, "tostr": 9}, "objects": {"": [[1, 0, 0, "module-2", "vsc"]], "vsc": [[9, 0, 0, "-", "attrs"], [9, 0, 0, "-", "constraints"], [9, 0, 0, "-", "coverage"], [1, 1, 1, "", "get_coverage_report"], [1, 1, 1, "", "get_coverage_report_model"], [9, 0, 0, "-", "rand_obj"], [1, 1, 1, "", "report_coverage"], [9, 0, 0, "-", "types"], [1, 1, 1, "", "write_coverage_db"]], "vsc.attrs": [[9, 1, 1, "", "attr"], [9, 1, 1, "", "rand_attr"]], "vsc.constraints": [[9, 1, 1, "", "constraint"], [9, 2, 1, "", "constraint_t"], [9, 1, 1, "", "dist"], [9, 1, 1, "", "dynamic_constraint"], [9, 2, 1, "", "dynamic_constraint_t"], [9, 2, 1, "", "else_if"], [9, 2, 1, "", "else_then_c"], [9, 2, 1, "", "forall"], [9, 2, 1, "", "foreach"], [9, 2, 1, "", "if_then"], [9, 2, 1, "", "implies"], [9, 1, 1, "", "soft"], [9, 1, 1, "", "solve_order"], [9, 1, 1, "", "unique"], [9, 2, 1, "", "weight"]], "vsc.constraints.constraint_t": [[9, 3, 1, "", "constraint_mode"], [9, 3, 1, "", "elab"], [9, 3, 1, "", "set_model"]], "vsc.constraints.dynamic_constraint_t": [[9, 2, 1, "", "call_closure"], [9, 3, 1, "", "set_model"]], "vsc.constraints.foreach": [[9, 2, 1, "", "idx_term_c"], [9, 2, 1, "", "it_term_c"]], "vsc.constraints.foreach.idx_term_c": [[9, 3, 1, "", "to_expr"]], "vsc.constraints.foreach.it_term_c": [[9, 3, 1, "", "to_expr"]], "vsc.coverage": [[9, 2, 1, "", "bin"], [9, 2, 1, "", "bin_array"], [9, 2, 1, "", "binsof"], [9, 1, 1, "", "covergroup"], [9, 2, 1, "", "coverpoint"], [9, 2, 1, "", "cross"], [9, 2, 1, "", "wildcard_bin"], [9, 2, 1, "", "wildcard_bin_array"]], "vsc.coverage.bin": [[9, 3, 1, "", "build_cov_model"]], "vsc.coverage.bin_array": [[9, 3, 1, "", "build_cov_model"]], "vsc.coverage.binsof": [[9, 3, 1, "", "intersect"]], "vsc.coverage.coverpoint": [[9, 3, 1, "", "build_cov_model"], [9, 3, 1, "", "get_coverage"], [9, 3, 1, "", "get_inst_coverage"], [9, 3, 1, "", "get_model"], [9, 3, 1, "", "get_val"], [9, 3, 1, "", "set_val"]], "vsc.coverage.cross": [[9, 3, 1, "", "build_cov_model"], [9, 3, 1, "", "get_coverage"]], "vsc.coverage.wildcard_bin": [[9, 3, 1, "", "build_cov_model"]], "vsc.coverage.wildcard_bin_array": [[9, 3, 1, "", "build_cov_model"]], "vsc.model": [[9, 0, 0, "-", "constraint_block_model"], [9, 0, 0, "-", "constraint_expr_model"], [9, 0, 0, "-", "constraint_if_else_model"], [9, 0, 0, "-", "constraint_implies_model"], [9, 0, 0, "-", "constraint_model"], [9, 0, 0, "-", "constraint_scope_model"], [9, 0, 0, "-", "constraint_unique_model"], [9, 0, 0, "-", "covergroup_model"], [9, 0, 0, "-", "covergroup_registry"], [9, 0, 0, "-", "coverpoint_bin_array_model"], [9, 0, 0, "-", "coverpoint_bin_collection_model"], [9, 0, 0, "-", "coverpoint_bin_enum_model"], [9, 0, 0, "-", "coverpoint_bin_model_base"], [9, 0, 0, "-", "coverpoint_bin_single_bag_model"], [9, 0, 0, "-", "coverpoint_bin_single_range_model"], [9, 0, 0, "-", "coverpoint_bin_single_val_model"], [9, 0, 0, "-", "coverpoint_cross_model"], [9, 0, 0, "-", "coverpoint_model"], [9, 0, 0, "-", "field_composite_model"], [9, 0, 0, "-", "rangelist_model"]], "vsc.model.constraint_block_model": [[9, 2, 1, "", "ConstraintBlockModel"]], "vsc.model.constraint_block_model.ConstraintBlockModel": [[9, 3, 1, "", "accept"], [9, 3, 1, "", "clone"], [9, 3, 1, "", "set_constraint_enabled"]], "vsc.model.constraint_expr_model": [[9, 2, 1, "", "ConstraintExprModel"]], "vsc.model.constraint_expr_model.ConstraintExprModel": [[9, 3, 1, "", "accept"], [9, 3, 1, "", "build"], [9, 3, 1, "", "clone"]], "vsc.model.constraint_if_else_model": [[9, 2, 1, "", "ConstraintIfElseModel"]], "vsc.model.constraint_if_else_model.ConstraintIfElseModel": [[9, 3, 1, "", "accept"], [9, 3, 1, "", "build"], [9, 3, 1, "", "clone"]], "vsc.model.constraint_implies_model": [[9, 2, 1, "", "ConstraintImpliesModel"]], "vsc.model.constraint_implies_model.ConstraintImpliesModel": [[9, 3, 1, "", "accept"], [9, 3, 1, "", "build"], [9, 3, 1, "", "clone"], [9, 3, 1, "", "get_nodes"]], "vsc.model.constraint_model": [[9, 2, 1, "", "ConstraintModel"]], "vsc.model.constraint_model.ConstraintModel": [[9, 3, 1, "", "accept"], [9, 3, 1, "", "and_nodelist"], [9, 3, 1, "", "build"], [9, 3, 1, "", "clone"], [9, 3, 1, "", "dispose"], [9, 3, 1, "", "get_nodes"]], "vsc.model.constraint_scope_model": [[9, 2, 1, "", "ConstraintScopeModel"]], "vsc.model.constraint_scope_model.ConstraintScopeModel": [[9, 3, 1, "", "accept"], [9, 3, 1, "", "addConstraint"], [9, 3, 1, "", "build"], [9, 3, 1, "", "clone"], [9, 3, 1, "", "get_nodes"]], "vsc.model.constraint_unique_model": [[9, 2, 1, "", "ConstraintUniqueModel"]], "vsc.model.constraint_unique_model.ConstraintUniqueModel": [[9, 3, 1, "", "accept"], [9, 3, 1, "", "build"], [9, 3, 1, "", "clone"], [9, 3, 1, "", "get_nodes"]], "vsc.model.covergroup_model": [[9, 2, 1, "", "CovergroupModel"]], "vsc.model.covergroup_model.CovergroupModel": [[9, 3, 1, "", "accept"], [9, 3, 1, "", "add_coverpoint"], [9, 3, 1, "", "clone"], [9, 3, 1, "", "coverage_ev"], [9, 3, 1, "", "dump"], [9, 3, 1, "", "equals"], [9, 3, 1, "", "finalize"], [9, 3, 1, "", "get_coverage"], [9, 3, 1, "", "get_inst_coverage"], [9, 3, 1, "", "sample"]], "vsc.model.covergroup_registry": [[9, 2, 1, "", "CovergroupRegistry"]], "vsc.model.covergroup_registry.CovergroupRegistry": [[9, 3, 1, "", "accept"], [9, 3, 1, "", "inst"]], "vsc.model.coverpoint_bin_array_model": [[9, 2, 1, "", "CoverpointBinArrayModel"]], "vsc.model.coverpoint_bin_array_model.CoverpointBinArrayModel": [[9, 3, 1, "", "accept"], [9, 3, 1, "", "clone"], [9, 3, 1, "", "dump"], [9, 3, 1, "", "equals"], [9, 3, 1, "", "finalize"], [9, 3, 1, "", "get_bin_expr"], [9, 3, 1, "", "get_bin_name"], [9, 3, 1, "", "get_bin_range"], [9, 3, 1, "", "get_n_bins"], [9, 3, 1, "", "hit_idx"], [9, 3, 1, "", "sample"]], "vsc.model.coverpoint_bin_collection_model": [[9, 2, 1, "", "CoverpointBinCollectionModel"]], "vsc.model.coverpoint_bin_collection_model.CoverpointBinCollectionModel": [[9, 4, 1, "", "DEBUG_EN"], [9, 3, 1, "", "accept"], [9, 3, 1, "", "add_bin"], [9, 3, 1, "", "clone"], [9, 3, 1, "", "dump"], [9, 3, 1, "", "equals"], [9, 3, 1, "", "finalize"], [9, 3, 1, "", "get_bin_expr"], [9, 3, 1, "", "get_bin_name"], [9, 3, 1, "", "get_bin_range"], [9, 3, 1, "", "get_coverage"], [9, 3, 1, "", "get_hits"], [9, 3, 1, "", "get_n_bins"], [9, 3, 1, "", "hit_idx"], [9, 3, 1, "", "mk_collection"], [9, 3, 1, "", "sample"], [9, 3, 1, "", "set_bin_type"]], "vsc.model.coverpoint_bin_enum_model": [[9, 2, 1, "", "CoverpointBinEnumModel"]], "vsc.model.coverpoint_bin_enum_model.CoverpointBinEnumModel": [[9, 3, 1, "", "accept"], [9, 3, 1, "", "clone"], [9, 3, 1, "", "equals"], [9, 3, 1, "", "finalize"], [9, 3, 1, "", "get_bin_name"], [9, 3, 1, "", "sample"]], "vsc.model.coverpoint_bin_model_base": [[9, 2, 1, "", "CoverpointBinModelBase"]], "vsc.model.coverpoint_bin_model_base.CoverpointBinModelBase": [[9, 3, 1, "", "equals"], [9, 3, 1, "", "finalize"], [9, 3, 1, "", "get_bin_expr"], [9, 3, 1, "", "get_bin_name"], [9, 3, 1, "", "get_n_bins"], [9, 3, 1, "", "hit_idx"], [9, 3, 1, "", "sample"], [9, 3, 1, "", "set_bin_type"]], "vsc.model.coverpoint_bin_single_bag_model": [[9, 2, 1, "", "CoverpointBinSingleBagModel"]], "vsc.model.coverpoint_bin_single_bag_model.CoverpointBinSingleBagModel": [[9, 3, 1, "", "accept"], [9, 3, 1, "", "clone"], [9, 3, 1, "", "dump"], [9, 3, 1, "", "equals"], [9, 3, 1, "", "finalize"], [9, 3, 1, "", "get_bin_expr"], [9, 3, 1, "", "get_bin_name"], [9, 3, 1, "", "sample"]], "vsc.model.coverpoint_bin_single_range_model": [[9, 2, 1, "", "CoverpointBinSingleRangeModel"]], "vsc.model.coverpoint_bin_single_range_model.CoverpointBinSingleRangeModel": [[9, 3, 1, "", "accept"], [9, 3, 1, "", "clone"], [9, 3, 1, "", "equals"], [9, 3, 1, "", "finalize"], [9, 3, 1, "", "get_bin_expr"], [9, 3, 1, "", "get_bin_name"], [9, 3, 1, "", "sample"]], "vsc.model.coverpoint_bin_single_val_model": [[9, 2, 1, "", "CoverpointBinSingleValModel"]], "vsc.model.coverpoint_bin_single_val_model.CoverpointBinSingleValModel": [[9, 3, 1, "", "accept"], [9, 3, 1, "", "clone"], [9, 3, 1, "", "equals"], [9, 3, 1, "", "finalize"], [9, 3, 1, "", "get_bin_expr"], [9, 3, 1, "", "get_bin_name"], [9, 3, 1, "", "get_bin_range"], [9, 3, 1, "", "sample"]], "vsc.model.coverpoint_cross_model": [[9, 2, 1, "", "CoverpointCrossModel"]], "vsc.model.coverpoint_cross_model.CoverpointCrossModel": [[9, 3, 1, "", "accept"], [9, 3, 1, "", "add_coverpoint"], [9, 3, 1, "", "clone"], [9, 3, 1, "", "coverpoints"], [9, 3, 1, "", "dump"], [9, 3, 1, "", "equals"], [9, 3, 1, "", "finalize"], [9, 3, 1, "", "get_bin_expr"], [9, 3, 1, "", "get_bin_hits"], [9, 3, 1, "", "get_bin_name"], [9, 3, 1, "", "get_coverage"], [9, 3, 1, "", "get_n_bins"], [9, 3, 1, "", "reset"], [9, 3, 1, "", "sample"], [9, 3, 1, "", "select_unhit_bin"], [9, 3, 1, "", "set_target_value_cache"]], "vsc.model.coverpoint_model": [[9, 2, 1, "", "CoverpointModel"]], "vsc.model.coverpoint_model.CoverpointModel": [[9, 3, 1, "", "accept"], [9, 3, 1, "", "add_bin_model"], [9, 3, 1, "", "add_ignore_bin_model"], [9, 3, 1, "", "add_illegal_bin_model"], [9, 3, 1, "", "clone"], [9, 3, 1, "", "coverage_ev"], [9, 3, 1, "", "dump"], [9, 3, 1, "", "equals"], [9, 3, 1, "", "finalize"], [9, 3, 1, "", "get_bin_expr"], [9, 3, 1, "", "get_bin_hits"], [9, 3, 1, "", "get_bin_name"], [9, 3, 1, "", "get_bin_range"], [9, 3, 1, "", "get_coverage"], [9, 3, 1, "", "get_hit_bins"], [9, 3, 1, "", "get_ignore_bin_hits"], [9, 3, 1, "", "get_ignore_bin_name"], [9, 3, 1, "", "get_illegal_bin_hits"], [9, 3, 1, "", "get_illegal_bin_name"], [9, 3, 1, "", "get_inst_coverage"], [9, 3, 1, "", "get_n_bins"], [9, 3, 1, "", "get_n_hit_bins"], [9, 3, 1, "", "get_n_ignore_bins"], [9, 3, 1, "", "get_n_illegal_bins"], [9, 3, 1, "", "get_val"], [9, 3, 1, "", "reset"], [9, 3, 1, "", "sample"], [9, 3, 1, "", "select_unhit_bin"], [9, 3, 1, "", "set_target_value_cache"]], "vsc.model.field_composite_model": [[9, 2, 1, "", "FieldCompositeModel"]], "vsc.model.field_composite_model.FieldCompositeModel": [[9, 3, 1, "", "accept"], [9, 3, 1, "", "add_constraint"], [9, 3, 1, "", "add_dynamic_constraint"], [9, 3, 1, "", "add_field"], [9, 3, 1, "", "build"], [9, 3, 1, "", "dispose"], [9, 3, 1, "", "finalize"], [9, 3, 1, "", "find_field"], [9, 3, 1, "", "get_constraint"], [9, 3, 1, "", "get_constraints"], [9, 3, 1, "", "get_field"], [9, 3, 1, "", "get_fields"], [9, 5, 1, "", "is_declared_rand"], [9, 3, 1, "", "post_randomize"], [9, 3, 1, "", "pre_randomize"], [9, 3, 1, "", "set_field"], [9, 3, 1, "", "set_used_rand"]], "vsc.model.rangelist_model": [[9, 2, 1, "", "RangelistModel"]], "vsc.model.rangelist_model.RangelistModel": [[9, 3, 1, "", "accept"], [9, 3, 1, "", "add_range"], [9, 3, 1, "", "add_value"], [9, 3, 1, "", "clone"], [9, 3, 1, "", "compact"], [9, 3, 1, "", "equals"], [9, 3, 1, "", "intersect"], [9, 3, 1, "", "toString"]], "vsc.rand_obj": [[9, 1, 1, "", "generator"], [9, 1, 1, "", "randobj"]], "vsc.types": [[9, 2, 1, "", "bit_t"], [9, 2, 1, "", "bool_t"], [9, 2, 1, "", "dynamic_constraint_proxy"], [9, 2, 1, "", "enum_t"], [9, 2, 1, "", "expr"], [9, 2, 1, "", "expr_subscript"], [9, 2, 1, "", "field_info"], [9, 2, 1, "", "int16_t"], [9, 2, 1, "", "int32_t"], [9, 2, 1, "", "int64_t"], [9, 2, 1, "", "int8_t"], [9, 2, 1, "", "int_t"], [9, 2, 1, "", "list_t"], [9, 2, 1, "", "rand_bit_t"], [9, 2, 1, "", "rand_enum_t"], [9, 2, 1, "", "rand_int16_t"], [9, 2, 1, "", "rand_int32_t"], [9, 2, 1, "", "rand_int64_t"], [9, 2, 1, "", "rand_int8_t"], [9, 2, 1, "", "rand_int_t"], [9, 2, 1, "", "rand_list_t"], [9, 2, 1, "", "rand_uint16_t"], [9, 2, 1, "", "rand_uint32_t"], [9, 2, 1, "", "rand_uint64_t"], [9, 2, 1, "", "rand_uint8_t"], [9, 2, 1, "", "randsz_list_t"], [9, 2, 1, "", "rangelist"], [9, 2, 1, "", "rng"], [9, 1, 1, "", "signed"], [9, 1, 1, "", "to_expr"], [9, 2, 1, "", "type_base"], [9, 2, 1, "", "type_bool"], [9, 2, 1, "", "type_enum"], [9, 2, 1, "", "uint16_t"], [9, 2, 1, "", "uint32_t"], [9, 2, 1, "", "uint64_t"], [9, 2, 1, "", "uint8_t"], [9, 1, 1, "", "unsigned"]], "vsc.types.expr": [[9, 3, 1, "", "bin_expr"], [9, 3, 1, "", "inside"], [9, 3, 1, "", "not_inside"], [9, 3, 1, "", "outside"]], "vsc.types.field_info": [[9, 3, 1, "", "set_is_rand"]], "vsc.types.list_t": [[9, 3, 1, "", "append"], [9, 3, 1, "", "build_field_model"], [9, 3, 1, "", "clear"], [9, 3, 1, "", "extend"], [9, 3, 1, "", "get_model"], [9, 5, 1, "", "product"], [9, 5, 1, "", "size"], [9, 5, 1, "", "sum"], [9, 3, 1, "", "to_expr"]], "vsc.types.rangelist": [[9, 3, 1, "", "append"], [9, 3, 1, "", "clear"], [9, 3, 1, "", "extend"]], "vsc.types.type_base": [[9, 3, 1, "", "bin_expr"], [9, 3, 1, "", "build_field_model"], [9, 3, 1, "", "clone"], [9, 3, 1, "", "get_model"], [9, 3, 1, "", "get_val"], [9, 3, 1, "", "inside"], [9, 3, 1, "", "not_inside"], [9, 3, 1, "", "outside"], [9, 5, 1, "", "rand_mode"], [9, 3, 1, "", "set_val"], [9, 3, 1, "", "to_expr"], [9, 5, 1, "", "val"]], "vsc.types.type_bool": [[9, 3, 1, "", "build_field_model"], [9, 3, 1, "", "get_val"], [9, 3, 1, "", "set_val"]], "vsc.types.type_enum": [[9, 3, 1, "", "build_field_model"], [9, 3, 1, "", "get_val"], [9, 3, 1, "", "set_val"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"]}, "titleterms": {"pyvsc": [0, 1, 2, 4, 5, 6, 7, 8], "constraint": [0, 9], "block": 0, "express": [0, 9], "dynam": 0, "refer": [0, 9], "mutabl": 0, "rangelist": 0, "part": 0, "select": [0, 7], "statement": 0, "dist": 0, "foreach": 0, "els": 0, "impli": 0, "soft": 0, "solve_ord": 0, "uniqu": 0, "custom": [0, 1], "behavior": 0, "random": [0, 7], "With": 0, "mode": 0, "rand": 0, "coverag": [1, 9], "covergroup": 1, "specifi": 1, "option": 1, "coverpoint": 1, "bin": 1, "individu": 1, "arrai": 1, "auto": 1, "wildcard": 1, "singl": 1, "ignor": 1, "illeg": 1, "cross": 1, "sampl": 1, "condit": 1, "provid": 1, "data": [1, 2, 9], "declar": 1, "method": [1, 7], "instanti": 1, "api": [1, 9], "report": 1, "save": 1, "xml": 1, "via": [1, 8], "uci": 1, "implement": 1, "us": 1, "view": 1, "pyuci": 1, "viewer": 1, "siemen": 1, "questa": 1, "write": 1, "synopsi": 1, "vc": 1, "import": 1, "type": 2, "scalar": 2, "standard": 2, "width": 2, "attribut": 2, "arbitrari": 2, "enum": 2, "class": 2, "access": 2, "valu": 2, "list": 2, "debug": 3, "enabl": 3, "solv": 3, "fail": 3, "captur": 3, "sourc": [3, 8], "inform": 3, "featur": 4, "document": 5, "indic": 5, "tabl": 5, "introduct": 6, "what": 6, "i": 6, "blog": 6, "post": 6, "paper": 6, "contributor": 6, "manag": 7, "stabil": 7, "weight": 7, "distselect": 7, "randselect": 7, "quickstart": 8, "guid": 8, "instal": 8, "pypi": 8, "from": 8, "A": 8, "simpl": 8, "exampl": 8, "domain": 9, "specif": 9, "languag": 9, "model": 9}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"PyVSC Constraints": [[0, "pyvsc-constraints"]], "Constraint Blocks": [[0, "constraint-blocks"]], "Expressions": [[0, "expressions"], [9, "module-vsc.model.rangelist_model"]], "Dynamic-constraint Reference": [[0, "dynamic-constraint-reference"]], "in": [[0, "in"]], "Mutable Rangelists": [[0, "mutable-rangelists"]], "part select": [[0, "part-select"]], "Statements": [[0, "statements"]], "dist": [[0, "dist"]], "foreach": [[0, "foreach"]], "if/else": [[0, "if-else"]], "implies": [[0, "implies"]], "soft": [[0, "soft"]], "solve_order": [[0, "solve-order"]], "unique": [[0, "unique"]], "Customizing Constraint Behavior": [[0, "customizing-constraint-behavior"]], "Randomize-With": [[0, "randomize-with"]], "Constraint Mode": [[0, "constraint-mode"]], "Rand Mode": [[0, "rand-mode"]], "PyVSC Coverage": [[1, "pyvsc-coverage"]], "Covergroups": [[1, "covergroups"]], "Specifying Covergroup Options": [[1, "specifying-covergroup-options"]], "Coverpoints": [[1, "coverpoints"]], "Specifying Bins": [[1, "specifying-bins"]], "Individual Bins": [[1, "individual-bins"]], "Bin Arrays": [[1, "bin-arrays"]], "Auto-Bins": [[1, "auto-bins"]], "Wildcard Bins (Single)": [[1, "wildcard-bins-single"]], "Wildcard Bins (Array)": [[1, "wildcard-bins-array"]], "Ignore and Illegal Bins": [[1, "ignore-and-illegal-bins"]], "Coverpoint Crosses": [[1, "coverpoint-crosses"]], "Specifying Coverpoint Sampling Conditions": [[1, "specifying-coverpoint-sampling-conditions"]], "Coverpoint Options": [[1, "coverpoint-options"]], "Providing Coverage Data to Sample": [[1, "providing-coverage-data-to-sample"]], "Declaring a Custom Sample Method": [[1, "declaring-a-custom-sample-method"]], "Specifying Sampling Data at Instantiation": [[1, "specifying-sampling-data-at-instantiation"]], "Coverage API": [[1, "coverage-api"]], "Coverage Reports": [[1, "coverage-reports"]], "Saving Coverage Data": [[1, "saving-coverage-data"]], "Saving to XML": [[1, "saving-to-xml"]], "Saving via a UCIS API Implementation": [[1, "saving-via-a-ucis-api-implementation"]], "Using Coverage Data": [[1, "using-coverage-data"]], "Viewing Coverage with PyUCIS-Viewer": [[1, "viewing-coverage-with-pyucis-viewer"]], "Siemens Questa: Writing Coverage Data": [[1, "siemens-questa-writing-coverage-data"]], "Synopsys VCS: Importing Coverage Data": [[1, "synopsys-vcs-importing-coverage-data"]], "PyVSC Data Types": [[2, "pyvsc-data-types"]], "Scalar Standard-Width Attributes": [[2, "scalar-standard-width-attributes"]], "Scalar Arbitrary-Width Attributes": [[2, "scalar-arbitrary-width-attributes"]], "Enum-type Attributes": [[2, "enum-type-attributes"]], "Class-type Attributes": [[2, "class-type-attributes"]], "Accessing Attribute Values": [[2, "accessing-attribute-values"]], "List-type Attributes": [[2, "list-type-attributes"]], "Debug": [[3, "debug"]], "Enabling Solve-Fail Debug": [[3, "enabling-solve-fail-debug"]], "Capturing Source Information": [[3, "capturing-source-information"]], "PyVSC Features": [[4, "pyvsc-features"]], "PyVSC Documentation": [[5, "pyvsc-documentation"]], "Indices and tables": [[5, "indices-and-tables"]], "Introduction": [[6, "introduction"]], "What is PyVSC?": [[6, "what-is-pyvsc"]], "Blog Posts": [[6, "blog-posts"]], "Papers": [[6, "papers"]], "Contributors": [[6, "contributors"]], "PyVSC Methods": [[7, "pyvsc-methods"]], "Randomization Methods": [[7, "randomization-methods"]], "Managing Random Stability": [[7, "managing-random-stability"]], "Weighted-Random Selection Methods": [[7, "weighted-random-selection-methods"]], "distselect": [[7, "distselect"]], "randselect": [[7, "randselect"]], "Quickstart Guide": [[8, "quickstart-guide"]], "Installing PyVSC": [[8, "installing-pyvsc"]], "Installation via PyPi": [[8, "installation-via-pypi"]], "Installation from Source": [[8, "installation-from-source"]], "A Simple Example": [[8, "a-simple-example"]], "API Reference": [[9, "api-reference"]], "Domain-Specific Language API": [[9, "domain-specific-language-api"]], "Data and Constraints": [[9, "module-vsc.attrs"], [9, "id1"]], "Model API": [[9, "model-api"]], "Data and constraints": [[9, "id2"]], "Coverage": [[9, "module-vsc.model.covergroup_model"]]}, "indexentries": {"get_coverage_report() (in module vsc)": [[1, "vsc.get_coverage_report"]], "get_coverage_report_model() (in module vsc)": [[1, "vsc.get_coverage_report_model"]], "module": [[1, "module-0"], [1, "module-1"], [1, "module-2"], [1, "module-vsc"], [9, "module-vsc.attrs"], [9, "module-vsc.constraints"], [9, "module-vsc.coverage"], [9, "module-vsc.model.constraint_block_model"], [9, "module-vsc.model.constraint_expr_model"], [9, "module-vsc.model.constraint_if_else_model"], [9, "module-vsc.model.constraint_implies_model"], [9, "module-vsc.model.constraint_model"], [9, "module-vsc.model.constraint_scope_model"], [9, "module-vsc.model.constraint_unique_model"], [9, "module-vsc.model.covergroup_model"], [9, "module-vsc.model.covergroup_registry"], [9, "module-vsc.model.coverpoint_bin_array_model"], [9, "module-vsc.model.coverpoint_bin_collection_model"], [9, "module-vsc.model.coverpoint_bin_enum_model"], [9, "module-vsc.model.coverpoint_bin_model_base"], [9, "module-vsc.model.coverpoint_bin_single_bag_model"], [9, "module-vsc.model.coverpoint_bin_single_range_model"], [9, "module-vsc.model.coverpoint_bin_single_val_model"], [9, "module-vsc.model.coverpoint_cross_model"], [9, "module-vsc.model.coverpoint_model"], [9, "module-vsc.model.field_composite_model"], [9, "module-vsc.model.rangelist_model"], [9, "module-vsc.rand_obj"], [9, "module-vsc.types"]], "report_coverage() (in module vsc)": [[1, "vsc.report_coverage"]], "vsc": [[1, "module-0"], [1, "module-1"], [1, "module-2"], [1, "module-vsc"]], "write_coverage_db() (in module vsc)": [[1, "vsc.write_coverage_db"]], "constraintblockmodel (class in vsc.model.constraint_block_model)": [[9, "vsc.model.constraint_block_model.ConstraintBlockModel"]], "constraintexprmodel (class in vsc.model.constraint_expr_model)": [[9, "vsc.model.constraint_expr_model.ConstraintExprModel"]], "constraintifelsemodel (class in vsc.model.constraint_if_else_model)": [[9, "vsc.model.constraint_if_else_model.ConstraintIfElseModel"]], "constraintimpliesmodel (class in vsc.model.constraint_implies_model)": [[9, "vsc.model.constraint_implies_model.ConstraintImpliesModel"]], "constraintmodel (class in vsc.model.constraint_model)": [[9, "vsc.model.constraint_model.ConstraintModel"]], "constraintscopemodel (class in vsc.model.constraint_scope_model)": [[9, "vsc.model.constraint_scope_model.ConstraintScopeModel"]], "constraintuniquemodel (class in vsc.model.constraint_unique_model)": [[9, "vsc.model.constraint_unique_model.ConstraintUniqueModel"]], "covergroupmodel (class in vsc.model.covergroup_model)": [[9, "vsc.model.covergroup_model.CovergroupModel"]], "covergroupregistry (class in vsc.model.covergroup_registry)": [[9, "vsc.model.covergroup_registry.CovergroupRegistry"]], "coverpointbinarraymodel (class in vsc.model.coverpoint_bin_array_model)": [[9, "vsc.model.coverpoint_bin_array_model.CoverpointBinArrayModel"]], "coverpointbincollectionmodel (class in vsc.model.coverpoint_bin_collection_model)": [[9, "vsc.model.coverpoint_bin_collection_model.CoverpointBinCollectionModel"]], "coverpointbinenummodel (class in vsc.model.coverpoint_bin_enum_model)": [[9, "vsc.model.coverpoint_bin_enum_model.CoverpointBinEnumModel"]], "coverpointbinmodelbase (class in vsc.model.coverpoint_bin_model_base)": [[9, "vsc.model.coverpoint_bin_model_base.CoverpointBinModelBase"]], "coverpointbinsinglebagmodel (class in vsc.model.coverpoint_bin_single_bag_model)": [[9, "vsc.model.coverpoint_bin_single_bag_model.CoverpointBinSingleBagModel"]], "coverpointbinsinglerangemodel (class in vsc.model.coverpoint_bin_single_range_model)": [[9, "vsc.model.coverpoint_bin_single_range_model.CoverpointBinSingleRangeModel"]], "coverpointbinsinglevalmodel (class in vsc.model.coverpoint_bin_single_val_model)": [[9, "vsc.model.coverpoint_bin_single_val_model.CoverpointBinSingleValModel"]], "coverpointcrossmodel (class in vsc.model.coverpoint_cross_model)": [[9, "vsc.model.coverpoint_cross_model.CoverpointCrossModel"]], "coverpointmodel (class in vsc.model.coverpoint_model)": [[9, "vsc.model.coverpoint_model.CoverpointModel"]], "debug_en (vsc.model.coverpoint_bin_collection_model.coverpointbincollectionmodel attribute)": [[9, "vsc.model.coverpoint_bin_collection_model.CoverpointBinCollectionModel.DEBUG_EN"]], "fieldcompositemodel (class in vsc.model.field_composite_model)": [[9, "vsc.model.field_composite_model.FieldCompositeModel"]], "rangelistmodel (class in vsc.model.rangelist_model)": [[9, "vsc.model.rangelist_model.RangelistModel"]], "accept() (vsc.model.constraint_block_model.constraintblockmodel method)": [[9, "vsc.model.constraint_block_model.ConstraintBlockModel.accept"]], "accept() (vsc.model.constraint_expr_model.constraintexprmodel method)": [[9, "vsc.model.constraint_expr_model.ConstraintExprModel.accept"]], "accept() (vsc.model.constraint_if_else_model.constraintifelsemodel method)": [[9, "vsc.model.constraint_if_else_model.ConstraintIfElseModel.accept"]], "accept() (vsc.model.constraint_implies_model.constraintimpliesmodel method)": [[9, "vsc.model.constraint_implies_model.ConstraintImpliesModel.accept"]], "accept() (vsc.model.constraint_model.constraintmodel method)": [[9, "vsc.model.constraint_model.ConstraintModel.accept"]], "accept() (vsc.model.constraint_scope_model.constraintscopemodel method)": [[9, "vsc.model.constraint_scope_model.ConstraintScopeModel.accept"]], "accept() (vsc.model.constraint_unique_model.constraintuniquemodel method)": [[9, "vsc.model.constraint_unique_model.ConstraintUniqueModel.accept"]], "accept() (vsc.model.covergroup_model.covergroupmodel method)": [[9, "vsc.model.covergroup_model.CovergroupModel.accept"]], "accept() (vsc.model.covergroup_registry.covergroupregistry method)": [[9, "vsc.model.covergroup_registry.CovergroupRegistry.accept"]], "accept() (vsc.model.coverpoint_bin_array_model.coverpointbinarraymodel method)": [[9, "vsc.model.coverpoint_bin_array_model.CoverpointBinArrayModel.accept"]], "accept() (vsc.model.coverpoint_bin_collection_model.coverpointbincollectionmodel method)": [[9, "vsc.model.coverpoint_bin_collection_model.CoverpointBinCollectionModel.accept"]], "accept() (vsc.model.coverpoint_bin_enum_model.coverpointbinenummodel method)": [[9, "vsc.model.coverpoint_bin_enum_model.CoverpointBinEnumModel.accept"]], "accept() (vsc.model.coverpoint_bin_single_bag_model.coverpointbinsinglebagmodel method)": [[9, "vsc.model.coverpoint_bin_single_bag_model.CoverpointBinSingleBagModel.accept"]], "accept() (vsc.model.coverpoint_bin_single_range_model.coverpointbinsinglerangemodel method)": [[9, "vsc.model.coverpoint_bin_single_range_model.CoverpointBinSingleRangeModel.accept"]], "accept() (vsc.model.coverpoint_bin_single_val_model.coverpointbinsinglevalmodel method)": [[9, "vsc.model.coverpoint_bin_single_val_model.CoverpointBinSingleValModel.accept"]], "accept() (vsc.model.coverpoint_cross_model.coverpointcrossmodel method)": [[9, "vsc.model.coverpoint_cross_model.CoverpointCrossModel.accept"]], "accept() (vsc.model.coverpoint_model.coverpointmodel method)": [[9, "vsc.model.coverpoint_model.CoverpointModel.accept"]], "accept() (vsc.model.field_composite_model.fieldcompositemodel method)": [[9, "vsc.model.field_composite_model.FieldCompositeModel.accept"]], "accept() (vsc.model.rangelist_model.rangelistmodel method)": [[9, "vsc.model.rangelist_model.RangelistModel.accept"]], "addconstraint() (vsc.model.constraint_scope_model.constraintscopemodel method)": [[9, "vsc.model.constraint_scope_model.ConstraintScopeModel.addConstraint"]], "add_bin() (vsc.model.coverpoint_bin_collection_model.coverpointbincollectionmodel method)": [[9, "vsc.model.coverpoint_bin_collection_model.CoverpointBinCollectionModel.add_bin"]], "add_bin_model() (vsc.model.coverpoint_model.coverpointmodel method)": [[9, "vsc.model.coverpoint_model.CoverpointModel.add_bin_model"]], "add_constraint() (vsc.model.field_composite_model.fieldcompositemodel method)": [[9, "vsc.model.field_composite_model.FieldCompositeModel.add_constraint"]], "add_coverpoint() (vsc.model.covergroup_model.covergroupmodel method)": [[9, "vsc.model.covergroup_model.CovergroupModel.add_coverpoint"]], "add_coverpoint() (vsc.model.coverpoint_cross_model.coverpointcrossmodel method)": [[9, "vsc.model.coverpoint_cross_model.CoverpointCrossModel.add_coverpoint"]], "add_dynamic_constraint() (vsc.model.field_composite_model.fieldcompositemodel method)": [[9, "vsc.model.field_composite_model.FieldCompositeModel.add_dynamic_constraint"]], "add_field() (vsc.model.field_composite_model.fieldcompositemodel method)": [[9, "vsc.model.field_composite_model.FieldCompositeModel.add_field"]], "add_ignore_bin_model() (vsc.model.coverpoint_model.coverpointmodel method)": [[9, "vsc.model.coverpoint_model.CoverpointModel.add_ignore_bin_model"]], "add_illegal_bin_model() (vsc.model.coverpoint_model.coverpointmodel method)": [[9, "vsc.model.coverpoint_model.CoverpointModel.add_illegal_bin_model"]], "add_range() (vsc.model.rangelist_model.rangelistmodel method)": [[9, "vsc.model.rangelist_model.RangelistModel.add_range"]], "add_value() (vsc.model.rangelist_model.rangelistmodel method)": [[9, "vsc.model.rangelist_model.RangelistModel.add_value"]], "and_nodelist() (vsc.model.constraint_model.constraintmodel static method)": [[9, "vsc.model.constraint_model.ConstraintModel.and_nodelist"]], "append() (vsc.types.list_t method)": [[9, "vsc.types.list_t.append"]], "append() (vsc.types.rangelist method)": [[9, "vsc.types.rangelist.append"]], "attr() (in module vsc.attrs)": [[9, "vsc.attrs.attr"]], "bin (class in vsc.coverage)": [[9, "vsc.coverage.bin"]], "bin_array (class in vsc.coverage)": [[9, "vsc.coverage.bin_array"]], "bin_expr() (vsc.types.expr method)": [[9, "vsc.types.expr.bin_expr"]], "bin_expr() (vsc.types.type_base method)": [[9, "vsc.types.type_base.bin_expr"]], "binsof (class in vsc.coverage)": [[9, "vsc.coverage.binsof"]], "bit_t (class in vsc.types)": [[9, "vsc.types.bit_t"]], "bool_t (class in vsc.types)": [[9, "vsc.types.bool_t"]], "build() (vsc.model.constraint_expr_model.constraintexprmodel method)": [[9, "vsc.model.constraint_expr_model.ConstraintExprModel.build"]], "build() (vsc.model.constraint_if_else_model.constraintifelsemodel method)": [[9, "vsc.model.constraint_if_else_model.ConstraintIfElseModel.build"]], "build() (vsc.model.constraint_implies_model.constraintimpliesmodel method)": [[9, "vsc.model.constraint_implies_model.ConstraintImpliesModel.build"]], "build() (vsc.model.constraint_model.constraintmodel method)": [[9, "vsc.model.constraint_model.ConstraintModel.build"]], "build() (vsc.model.constraint_scope_model.constraintscopemodel method)": [[9, "vsc.model.constraint_scope_model.ConstraintScopeModel.build"]], "build() (vsc.model.constraint_unique_model.constraintuniquemodel method)": [[9, "vsc.model.constraint_unique_model.ConstraintUniqueModel.build"]], "build() (vsc.model.field_composite_model.fieldcompositemodel method)": [[9, "vsc.model.field_composite_model.FieldCompositeModel.build"]], "build_cov_model() (vsc.coverage.bin method)": [[9, "vsc.coverage.bin.build_cov_model"]], "build_cov_model() (vsc.coverage.bin_array method)": [[9, "vsc.coverage.bin_array.build_cov_model"]], "build_cov_model() (vsc.coverage.coverpoint method)": [[9, "vsc.coverage.coverpoint.build_cov_model"]], "build_cov_model() (vsc.coverage.cross method)": [[9, "vsc.coverage.cross.build_cov_model"]], "build_cov_model() (vsc.coverage.wildcard_bin method)": [[9, "vsc.coverage.wildcard_bin.build_cov_model"]], "build_cov_model() (vsc.coverage.wildcard_bin_array method)": [[9, "vsc.coverage.wildcard_bin_array.build_cov_model"]], "build_field_model() (vsc.types.list_t method)": [[9, "vsc.types.list_t.build_field_model"]], "build_field_model() (vsc.types.type_base method)": [[9, "vsc.types.type_base.build_field_model"]], "build_field_model() (vsc.types.type_bool method)": [[9, "vsc.types.type_bool.build_field_model"]], "build_field_model() (vsc.types.type_enum method)": [[9, "vsc.types.type_enum.build_field_model"]], "clear() (vsc.types.list_t method)": [[9, "vsc.types.list_t.clear"]], "clear() (vsc.types.rangelist method)": [[9, "vsc.types.rangelist.clear"]], "clone() (vsc.model.constraint_block_model.constraintblockmodel method)": [[9, "vsc.model.constraint_block_model.ConstraintBlockModel.clone"]], "clone() (vsc.model.constraint_expr_model.constraintexprmodel method)": [[9, "vsc.model.constraint_expr_model.ConstraintExprModel.clone"]], "clone() (vsc.model.constraint_if_else_model.constraintifelsemodel method)": [[9, "vsc.model.constraint_if_else_model.ConstraintIfElseModel.clone"]], "clone() (vsc.model.constraint_implies_model.constraintimpliesmodel method)": [[9, "vsc.model.constraint_implies_model.ConstraintImpliesModel.clone"]], "clone() (vsc.model.constraint_model.constraintmodel method)": [[9, "vsc.model.constraint_model.ConstraintModel.clone"]], "clone() (vsc.model.constraint_scope_model.constraintscopemodel method)": [[9, "vsc.model.constraint_scope_model.ConstraintScopeModel.clone"]], "clone() (vsc.model.constraint_unique_model.constraintuniquemodel method)": [[9, "vsc.model.constraint_unique_model.ConstraintUniqueModel.clone"]], "clone() (vsc.model.covergroup_model.covergroupmodel method)": [[9, "vsc.model.covergroup_model.CovergroupModel.clone"]], "clone() (vsc.model.coverpoint_bin_array_model.coverpointbinarraymodel method)": [[9, "vsc.model.coverpoint_bin_array_model.CoverpointBinArrayModel.clone"]], "clone() (vsc.model.coverpoint_bin_collection_model.coverpointbincollectionmodel method)": [[9, "vsc.model.coverpoint_bin_collection_model.CoverpointBinCollectionModel.clone"]], "clone() (vsc.model.coverpoint_bin_enum_model.coverpointbinenummodel method)": [[9, "vsc.model.coverpoint_bin_enum_model.CoverpointBinEnumModel.clone"]], "clone() (vsc.model.coverpoint_bin_single_bag_model.coverpointbinsinglebagmodel method)": [[9, "vsc.model.coverpoint_bin_single_bag_model.CoverpointBinSingleBagModel.clone"]], "clone() (vsc.model.coverpoint_bin_single_range_model.coverpointbinsinglerangemodel method)": [[9, "vsc.model.coverpoint_bin_single_range_model.CoverpointBinSingleRangeModel.clone"]], "clone() (vsc.model.coverpoint_bin_single_val_model.coverpointbinsinglevalmodel method)": [[9, "vsc.model.coverpoint_bin_single_val_model.CoverpointBinSingleValModel.clone"]], "clone() (vsc.model.coverpoint_cross_model.coverpointcrossmodel method)": [[9, "vsc.model.coverpoint_cross_model.CoverpointCrossModel.clone"]], "clone() (vsc.model.coverpoint_model.coverpointmodel method)": [[9, "vsc.model.coverpoint_model.CoverpointModel.clone"]], "clone() (vsc.model.rangelist_model.rangelistmodel method)": [[9, "vsc.model.rangelist_model.RangelistModel.clone"]], "clone() (vsc.types.type_base method)": [[9, "vsc.types.type_base.clone"]], "compact() (vsc.model.rangelist_model.rangelistmodel method)": [[9, "vsc.model.rangelist_model.RangelistModel.compact"]], "constraint() (in module vsc.constraints)": [[9, "vsc.constraints.constraint"]], "constraint_mode() (vsc.constraints.constraint_t method)": [[9, "vsc.constraints.constraint_t.constraint_mode"]], "constraint_t (class in vsc.constraints)": [[9, "vsc.constraints.constraint_t"]], "coverage_ev() (vsc.model.covergroup_model.covergroupmodel method)": [[9, "vsc.model.covergroup_model.CovergroupModel.coverage_ev"]], "coverage_ev() (vsc.model.coverpoint_model.coverpointmodel method)": [[9, "vsc.model.coverpoint_model.CoverpointModel.coverage_ev"]], "covergroup() (in module vsc.coverage)": [[9, "vsc.coverage.covergroup"]], "coverpoint (class in vsc.coverage)": [[9, "vsc.coverage.coverpoint"]], "coverpoints() (vsc.model.coverpoint_cross_model.coverpointcrossmodel method)": [[9, "vsc.model.coverpoint_cross_model.CoverpointCrossModel.coverpoints"]], "cross (class in vsc.coverage)": [[9, "vsc.coverage.cross"]], "dispose() (vsc.model.constraint_model.constraintmodel method)": [[9, "vsc.model.constraint_model.ConstraintModel.dispose"]], "dispose() (vsc.model.field_composite_model.fieldcompositemodel method)": [[9, "vsc.model.field_composite_model.FieldCompositeModel.dispose"]], "dist() (in module vsc.constraints)": [[9, "vsc.constraints.dist"]], "dump() (vsc.model.covergroup_model.covergroupmodel method)": [[9, "vsc.model.covergroup_model.CovergroupModel.dump"]], "dump() (vsc.model.coverpoint_bin_array_model.coverpointbinarraymodel method)": [[9, "vsc.model.coverpoint_bin_array_model.CoverpointBinArrayModel.dump"]], "dump() (vsc.model.coverpoint_bin_collection_model.coverpointbincollectionmodel method)": [[9, "vsc.model.coverpoint_bin_collection_model.CoverpointBinCollectionModel.dump"]], "dump() (vsc.model.coverpoint_bin_single_bag_model.coverpointbinsinglebagmodel method)": [[9, "vsc.model.coverpoint_bin_single_bag_model.CoverpointBinSingleBagModel.dump"]], "dump() (vsc.model.coverpoint_cross_model.coverpointcrossmodel method)": [[9, "vsc.model.coverpoint_cross_model.CoverpointCrossModel.dump"]], "dump() (vsc.model.coverpoint_model.coverpointmodel method)": [[9, "vsc.model.coverpoint_model.CoverpointModel.dump"]], "dynamic_constraint() (in module vsc.constraints)": [[9, "vsc.constraints.dynamic_constraint"]], "dynamic_constraint_proxy (class in vsc.types)": [[9, "vsc.types.dynamic_constraint_proxy"]], "dynamic_constraint_t (class in vsc.constraints)": [[9, "vsc.constraints.dynamic_constraint_t"]], "dynamic_constraint_t.call_closure (class in vsc.constraints)": [[9, "vsc.constraints.dynamic_constraint_t.call_closure"]], "elab() (vsc.constraints.constraint_t method)": [[9, "vsc.constraints.constraint_t.elab"]], "else_if (class in vsc.constraints)": [[9, "vsc.constraints.else_if"]], "else_then_c (class in vsc.constraints)": [[9, "vsc.constraints.else_then_c"]], "enum_t (class in vsc.types)": [[9, "vsc.types.enum_t"]], "equals() (vsc.model.covergroup_model.covergroupmodel method)": [[9, "vsc.model.covergroup_model.CovergroupModel.equals"]], "equals() (vsc.model.coverpoint_bin_array_model.coverpointbinarraymodel method)": [[9, "vsc.model.coverpoint_bin_array_model.CoverpointBinArrayModel.equals"]], "equals() (vsc.model.coverpoint_bin_collection_model.coverpointbincollectionmodel method)": [[9, "vsc.model.coverpoint_bin_collection_model.CoverpointBinCollectionModel.equals"]], "equals() (vsc.model.coverpoint_bin_enum_model.coverpointbinenummodel method)": [[9, "vsc.model.coverpoint_bin_enum_model.CoverpointBinEnumModel.equals"]], "equals() (vsc.model.coverpoint_bin_model_base.coverpointbinmodelbase method)": [[9, "vsc.model.coverpoint_bin_model_base.CoverpointBinModelBase.equals"]], "equals() (vsc.model.coverpoint_bin_single_bag_model.coverpointbinsinglebagmodel method)": [[9, "vsc.model.coverpoint_bin_single_bag_model.CoverpointBinSingleBagModel.equals"]], "equals() (vsc.model.coverpoint_bin_single_range_model.coverpointbinsinglerangemodel method)": [[9, "vsc.model.coverpoint_bin_single_range_model.CoverpointBinSingleRangeModel.equals"]], "equals() (vsc.model.coverpoint_bin_single_val_model.coverpointbinsinglevalmodel method)": [[9, "vsc.model.coverpoint_bin_single_val_model.CoverpointBinSingleValModel.equals"]], "equals() (vsc.model.coverpoint_cross_model.coverpointcrossmodel method)": [[9, "vsc.model.coverpoint_cross_model.CoverpointCrossModel.equals"]], "equals() (vsc.model.coverpoint_model.coverpointmodel method)": [[9, "vsc.model.coverpoint_model.CoverpointModel.equals"]], "equals() (vsc.model.rangelist_model.rangelistmodel method)": [[9, "vsc.model.rangelist_model.RangelistModel.equals"]], "expr (class in vsc.types)": [[9, "vsc.types.expr"]], "expr_subscript (class in vsc.types)": [[9, "vsc.types.expr_subscript"]], "extend() (vsc.types.list_t method)": [[9, "vsc.types.list_t.extend"]], "extend() (vsc.types.rangelist method)": [[9, "vsc.types.rangelist.extend"]], "field_info (class in vsc.types)": [[9, "vsc.types.field_info"]], "finalize() (vsc.model.covergroup_model.covergroupmodel method)": [[9, "vsc.model.covergroup_model.CovergroupModel.finalize"]], "finalize() (vsc.model.coverpoint_bin_array_model.coverpointbinarraymodel method)": [[9, "vsc.model.coverpoint_bin_array_model.CoverpointBinArrayModel.finalize"]], "finalize() (vsc.model.coverpoint_bin_collection_model.coverpointbincollectionmodel method)": [[9, "vsc.model.coverpoint_bin_collection_model.CoverpointBinCollectionModel.finalize"]], "finalize() (vsc.model.coverpoint_bin_enum_model.coverpointbinenummodel method)": [[9, "vsc.model.coverpoint_bin_enum_model.CoverpointBinEnumModel.finalize"]], "finalize() (vsc.model.coverpoint_bin_model_base.coverpointbinmodelbase method)": [[9, "vsc.model.coverpoint_bin_model_base.CoverpointBinModelBase.finalize"]], "finalize() (vsc.model.coverpoint_bin_single_bag_model.coverpointbinsinglebagmodel method)": [[9, "vsc.model.coverpoint_bin_single_bag_model.CoverpointBinSingleBagModel.finalize"]], "finalize() (vsc.model.coverpoint_bin_single_range_model.coverpointbinsinglerangemodel method)": [[9, "vsc.model.coverpoint_bin_single_range_model.CoverpointBinSingleRangeModel.finalize"]], "finalize() (vsc.model.coverpoint_bin_single_val_model.coverpointbinsinglevalmodel method)": [[9, "vsc.model.coverpoint_bin_single_val_model.CoverpointBinSingleValModel.finalize"]], "finalize() (vsc.model.coverpoint_cross_model.coverpointcrossmodel method)": [[9, "vsc.model.coverpoint_cross_model.CoverpointCrossModel.finalize"]], "finalize() (vsc.model.coverpoint_model.coverpointmodel method)": [[9, "vsc.model.coverpoint_model.CoverpointModel.finalize"]], "finalize() (vsc.model.field_composite_model.fieldcompositemodel method)": [[9, "vsc.model.field_composite_model.FieldCompositeModel.finalize"]], "find_field() (vsc.model.field_composite_model.fieldcompositemodel method)": [[9, "vsc.model.field_composite_model.FieldCompositeModel.find_field"]], "forall (class in vsc.constraints)": [[9, "vsc.constraints.forall"]], "foreach (class in vsc.constraints)": [[9, "vsc.constraints.foreach"]], "foreach.idx_term_c (class in vsc.constraints)": [[9, "vsc.constraints.foreach.idx_term_c"]], "foreach.it_term_c (class in vsc.constraints)": [[9, "vsc.constraints.foreach.it_term_c"]], "generator() (in module vsc.rand_obj)": [[9, "vsc.rand_obj.generator"]], "get_bin_expr() (vsc.model.coverpoint_bin_array_model.coverpointbinarraymodel method)": [[9, "vsc.model.coverpoint_bin_array_model.CoverpointBinArrayModel.get_bin_expr"]], "get_bin_expr() (vsc.model.coverpoint_bin_collection_model.coverpointbincollectionmodel method)": [[9, "vsc.model.coverpoint_bin_collection_model.CoverpointBinCollectionModel.get_bin_expr"]], "get_bin_expr() (vsc.model.coverpoint_bin_model_base.coverpointbinmodelbase method)": [[9, "vsc.model.coverpoint_bin_model_base.CoverpointBinModelBase.get_bin_expr"]], "get_bin_expr() (vsc.model.coverpoint_bin_single_bag_model.coverpointbinsinglebagmodel method)": [[9, "vsc.model.coverpoint_bin_single_bag_model.CoverpointBinSingleBagModel.get_bin_expr"]], "get_bin_expr() (vsc.model.coverpoint_bin_single_range_model.coverpointbinsinglerangemodel method)": [[9, "vsc.model.coverpoint_bin_single_range_model.CoverpointBinSingleRangeModel.get_bin_expr"]], "get_bin_expr() (vsc.model.coverpoint_bin_single_val_model.coverpointbinsinglevalmodel method)": [[9, "vsc.model.coverpoint_bin_single_val_model.CoverpointBinSingleValModel.get_bin_expr"]], "get_bin_expr() (vsc.model.coverpoint_cross_model.coverpointcrossmodel method)": [[9, "vsc.model.coverpoint_cross_model.CoverpointCrossModel.get_bin_expr"]], "get_bin_expr() (vsc.model.coverpoint_model.coverpointmodel method)": [[9, "vsc.model.coverpoint_model.CoverpointModel.get_bin_expr"]], "get_bin_hits() (vsc.model.coverpoint_cross_model.coverpointcrossmodel method)": [[9, "vsc.model.coverpoint_cross_model.CoverpointCrossModel.get_bin_hits"]], "get_bin_hits() (vsc.model.coverpoint_model.coverpointmodel method)": [[9, "vsc.model.coverpoint_model.CoverpointModel.get_bin_hits"]], "get_bin_name() (vsc.model.coverpoint_bin_array_model.coverpointbinarraymodel method)": [[9, "vsc.model.coverpoint_bin_array_model.CoverpointBinArrayModel.get_bin_name"]], "get_bin_name() (vsc.model.coverpoint_bin_collection_model.coverpointbincollectionmodel method)": [[9, "vsc.model.coverpoint_bin_collection_model.CoverpointBinCollectionModel.get_bin_name"]], "get_bin_name() (vsc.model.coverpoint_bin_enum_model.coverpointbinenummodel method)": [[9, "vsc.model.coverpoint_bin_enum_model.CoverpointBinEnumModel.get_bin_name"]], "get_bin_name() (vsc.model.coverpoint_bin_model_base.coverpointbinmodelbase method)": [[9, "vsc.model.coverpoint_bin_model_base.CoverpointBinModelBase.get_bin_name"]], "get_bin_name() (vsc.model.coverpoint_bin_single_bag_model.coverpointbinsinglebagmodel method)": [[9, "vsc.model.coverpoint_bin_single_bag_model.CoverpointBinSingleBagModel.get_bin_name"]], "get_bin_name() (vsc.model.coverpoint_bin_single_range_model.coverpointbinsinglerangemodel method)": [[9, "vsc.model.coverpoint_bin_single_range_model.CoverpointBinSingleRangeModel.get_bin_name"]], "get_bin_name() (vsc.model.coverpoint_bin_single_val_model.coverpointbinsinglevalmodel method)": [[9, "vsc.model.coverpoint_bin_single_val_model.CoverpointBinSingleValModel.get_bin_name"]], "get_bin_name() (vsc.model.coverpoint_cross_model.coverpointcrossmodel method)": [[9, "vsc.model.coverpoint_cross_model.CoverpointCrossModel.get_bin_name"]], "get_bin_name() (vsc.model.coverpoint_model.coverpointmodel method)": [[9, "vsc.model.coverpoint_model.CoverpointModel.get_bin_name"]], "get_bin_range() (vsc.model.coverpoint_bin_array_model.coverpointbinarraymodel method)": [[9, "vsc.model.coverpoint_bin_array_model.CoverpointBinArrayModel.get_bin_range"]], "get_bin_range() (vsc.model.coverpoint_bin_collection_model.coverpointbincollectionmodel method)": [[9, "vsc.model.coverpoint_bin_collection_model.CoverpointBinCollectionModel.get_bin_range"]], "get_bin_range() (vsc.model.coverpoint_bin_single_val_model.coverpointbinsinglevalmodel method)": [[9, "vsc.model.coverpoint_bin_single_val_model.CoverpointBinSingleValModel.get_bin_range"]], "get_bin_range() (vsc.model.coverpoint_model.coverpointmodel method)": [[9, "vsc.model.coverpoint_model.CoverpointModel.get_bin_range"]], "get_constraint() (vsc.model.field_composite_model.fieldcompositemodel method)": [[9, "vsc.model.field_composite_model.FieldCompositeModel.get_constraint"]], "get_constraints() (vsc.model.field_composite_model.fieldcompositemodel method)": [[9, "vsc.model.field_composite_model.FieldCompositeModel.get_constraints"]], "get_coverage() (vsc.coverage.coverpoint method)": [[9, "vsc.coverage.coverpoint.get_coverage"]], "get_coverage() (vsc.coverage.cross method)": [[9, "vsc.coverage.cross.get_coverage"]], "get_coverage() (vsc.model.covergroup_model.covergroupmodel method)": [[9, "vsc.model.covergroup_model.CovergroupModel.get_coverage"]], "get_coverage() (vsc.model.coverpoint_bin_collection_model.coverpointbincollectionmodel method)": [[9, "vsc.model.coverpoint_bin_collection_model.CoverpointBinCollectionModel.get_coverage"]], "get_coverage() (vsc.model.coverpoint_cross_model.coverpointcrossmodel method)": [[9, "vsc.model.coverpoint_cross_model.CoverpointCrossModel.get_coverage"]], "get_coverage() (vsc.model.coverpoint_model.coverpointmodel method)": [[9, "vsc.model.coverpoint_model.CoverpointModel.get_coverage"]], "get_field() (vsc.model.field_composite_model.fieldcompositemodel method)": [[9, "vsc.model.field_composite_model.FieldCompositeModel.get_field"]], "get_fields() (vsc.model.field_composite_model.fieldcompositemodel method)": [[9, "vsc.model.field_composite_model.FieldCompositeModel.get_fields"]], "get_hit_bins() (vsc.model.coverpoint_model.coverpointmodel method)": [[9, "vsc.model.coverpoint_model.CoverpointModel.get_hit_bins"]], "get_hits() (vsc.model.coverpoint_bin_collection_model.coverpointbincollectionmodel method)": [[9, "vsc.model.coverpoint_bin_collection_model.CoverpointBinCollectionModel.get_hits"]], "get_ignore_bin_hits() (vsc.model.coverpoint_model.coverpointmodel method)": [[9, "vsc.model.coverpoint_model.CoverpointModel.get_ignore_bin_hits"]], "get_ignore_bin_name() (vsc.model.coverpoint_model.coverpointmodel method)": [[9, "vsc.model.coverpoint_model.CoverpointModel.get_ignore_bin_name"]], "get_illegal_bin_hits() (vsc.model.coverpoint_model.coverpointmodel method)": [[9, "vsc.model.coverpoint_model.CoverpointModel.get_illegal_bin_hits"]], "get_illegal_bin_name() (vsc.model.coverpoint_model.coverpointmodel method)": [[9, "vsc.model.coverpoint_model.CoverpointModel.get_illegal_bin_name"]], "get_inst_coverage() (vsc.coverage.coverpoint method)": [[9, "vsc.coverage.coverpoint.get_inst_coverage"]], "get_inst_coverage() (vsc.model.covergroup_model.covergroupmodel method)": [[9, "vsc.model.covergroup_model.CovergroupModel.get_inst_coverage"]], "get_inst_coverage() (vsc.model.coverpoint_model.coverpointmodel method)": [[9, "vsc.model.coverpoint_model.CoverpointModel.get_inst_coverage"]], "get_model() (vsc.coverage.coverpoint method)": [[9, "vsc.coverage.coverpoint.get_model"]], "get_model() (vsc.types.list_t method)": [[9, "vsc.types.list_t.get_model"]], "get_model() (vsc.types.type_base method)": [[9, "vsc.types.type_base.get_model"]], "get_n_bins() (vsc.model.coverpoint_bin_array_model.coverpointbinarraymodel method)": [[9, "vsc.model.coverpoint_bin_array_model.CoverpointBinArrayModel.get_n_bins"]], "get_n_bins() (vsc.model.coverpoint_bin_collection_model.coverpointbincollectionmodel method)": [[9, "vsc.model.coverpoint_bin_collection_model.CoverpointBinCollectionModel.get_n_bins"]], "get_n_bins() (vsc.model.coverpoint_bin_model_base.coverpointbinmodelbase method)": [[9, "vsc.model.coverpoint_bin_model_base.CoverpointBinModelBase.get_n_bins"]], "get_n_bins() (vsc.model.coverpoint_cross_model.coverpointcrossmodel method)": [[9, "vsc.model.coverpoint_cross_model.CoverpointCrossModel.get_n_bins"]], "get_n_bins() (vsc.model.coverpoint_model.coverpointmodel method)": [[9, "vsc.model.coverpoint_model.CoverpointModel.get_n_bins"]], "get_n_hit_bins() (vsc.model.coverpoint_model.coverpointmodel method)": [[9, "vsc.model.coverpoint_model.CoverpointModel.get_n_hit_bins"]], "get_n_ignore_bins() (vsc.model.coverpoint_model.coverpointmodel method)": [[9, "vsc.model.coverpoint_model.CoverpointModel.get_n_ignore_bins"]], "get_n_illegal_bins() (vsc.model.coverpoint_model.coverpointmodel method)": [[9, "vsc.model.coverpoint_model.CoverpointModel.get_n_illegal_bins"]], "get_nodes() (vsc.model.constraint_implies_model.constraintimpliesmodel method)": [[9, "vsc.model.constraint_implies_model.ConstraintImpliesModel.get_nodes"]], "get_nodes() (vsc.model.constraint_model.constraintmodel method)": [[9, "vsc.model.constraint_model.ConstraintModel.get_nodes"]], "get_nodes() (vsc.model.constraint_scope_model.constraintscopemodel method)": [[9, "vsc.model.constraint_scope_model.ConstraintScopeModel.get_nodes"]], "get_nodes() (vsc.model.constraint_unique_model.constraintuniquemodel method)": [[9, "vsc.model.constraint_unique_model.ConstraintUniqueModel.get_nodes"]], "get_val() (vsc.coverage.coverpoint method)": [[9, "vsc.coverage.coverpoint.get_val"]], "get_val() (vsc.model.coverpoint_model.coverpointmodel method)": [[9, "vsc.model.coverpoint_model.CoverpointModel.get_val"]], "get_val() (vsc.types.type_base method)": [[9, "vsc.types.type_base.get_val"]], "get_val() (vsc.types.type_bool method)": [[9, "vsc.types.type_bool.get_val"]], "get_val() (vsc.types.type_enum method)": [[9, "vsc.types.type_enum.get_val"]], "hit_idx() (vsc.model.coverpoint_bin_array_model.coverpointbinarraymodel method)": [[9, "vsc.model.coverpoint_bin_array_model.CoverpointBinArrayModel.hit_idx"]], "hit_idx() (vsc.model.coverpoint_bin_collection_model.coverpointbincollectionmodel method)": [[9, "vsc.model.coverpoint_bin_collection_model.CoverpointBinCollectionModel.hit_idx"]], "hit_idx() (vsc.model.coverpoint_bin_model_base.coverpointbinmodelbase method)": [[9, "vsc.model.coverpoint_bin_model_base.CoverpointBinModelBase.hit_idx"]], "if_then (class in vsc.constraints)": [[9, "vsc.constraints.if_then"]], "implies (class in vsc.constraints)": [[9, "vsc.constraints.implies"]], "inside() (vsc.types.expr method)": [[9, "vsc.types.expr.inside"]], "inside() (vsc.types.type_base method)": [[9, "vsc.types.type_base.inside"]], "inst() (vsc.model.covergroup_registry.covergroupregistry static method)": [[9, "vsc.model.covergroup_registry.CovergroupRegistry.inst"]], "int16_t (class in vsc.types)": [[9, "vsc.types.int16_t"]], "int32_t (class in vsc.types)": [[9, "vsc.types.int32_t"]], "int64_t (class in vsc.types)": [[9, "vsc.types.int64_t"]], "int8_t (class in vsc.types)": [[9, "vsc.types.int8_t"]], "int_t (class in vsc.types)": [[9, "vsc.types.int_t"]], "intersect() (vsc.coverage.binsof method)": [[9, "vsc.coverage.binsof.intersect"]], "intersect() (vsc.model.rangelist_model.rangelistmodel method)": [[9, "vsc.model.rangelist_model.RangelistModel.intersect"]], "is_declared_rand (vsc.model.field_composite_model.fieldcompositemodel property)": [[9, "vsc.model.field_composite_model.FieldCompositeModel.is_declared_rand"]], "list_t (class in vsc.types)": [[9, "vsc.types.list_t"]], "mk_collection() (vsc.model.coverpoint_bin_collection_model.coverpointbincollectionmodel static method)": [[9, "vsc.model.coverpoint_bin_collection_model.CoverpointBinCollectionModel.mk_collection"]], "not_inside() (vsc.types.expr method)": [[9, "vsc.types.expr.not_inside"]], "not_inside() (vsc.types.type_base method)": [[9, "vsc.types.type_base.not_inside"]], "outside() (vsc.types.expr method)": [[9, "vsc.types.expr.outside"]], "outside() (vsc.types.type_base method)": [[9, "vsc.types.type_base.outside"]], "post_randomize() (vsc.model.field_composite_model.fieldcompositemodel method)": [[9, "vsc.model.field_composite_model.FieldCompositeModel.post_randomize"]], "pre_randomize() (vsc.model.field_composite_model.fieldcompositemodel method)": [[9, "vsc.model.field_composite_model.FieldCompositeModel.pre_randomize"]], "product (vsc.types.list_t property)": [[9, "vsc.types.list_t.product"]], "rand_attr() (in module vsc.attrs)": [[9, "vsc.attrs.rand_attr"]], "rand_bit_t (class in vsc.types)": [[9, "vsc.types.rand_bit_t"]], "rand_enum_t (class in vsc.types)": [[9, "vsc.types.rand_enum_t"]], "rand_int16_t (class in vsc.types)": [[9, "vsc.types.rand_int16_t"]], "rand_int32_t (class in vsc.types)": [[9, "vsc.types.rand_int32_t"]], "rand_int64_t (class in vsc.types)": [[9, "vsc.types.rand_int64_t"]], "rand_int8_t (class in vsc.types)": [[9, "vsc.types.rand_int8_t"]], "rand_int_t (class in vsc.types)": [[9, "vsc.types.rand_int_t"]], "rand_list_t (class in vsc.types)": [[9, "vsc.types.rand_list_t"]], "rand_mode (vsc.types.type_base property)": [[9, "vsc.types.type_base.rand_mode"]], "rand_uint16_t (class in vsc.types)": [[9, "vsc.types.rand_uint16_t"]], "rand_uint32_t (class in vsc.types)": [[9, "vsc.types.rand_uint32_t"]], "rand_uint64_t (class in vsc.types)": [[9, "vsc.types.rand_uint64_t"]], "rand_uint8_t (class in vsc.types)": [[9, "vsc.types.rand_uint8_t"]], "randobj() (in module vsc.rand_obj)": [[9, "vsc.rand_obj.randobj"]], "randsz_list_t (class in vsc.types)": [[9, "vsc.types.randsz_list_t"]], "rangelist (class in vsc.types)": [[9, "vsc.types.rangelist"]], "reset() (vsc.model.coverpoint_cross_model.coverpointcrossmodel method)": [[9, "vsc.model.coverpoint_cross_model.CoverpointCrossModel.reset"]], "reset() (vsc.model.coverpoint_model.coverpointmodel method)": [[9, "vsc.model.coverpoint_model.CoverpointModel.reset"]], "rng (class in vsc.types)": [[9, "vsc.types.rng"]], "sample() (vsc.model.covergroup_model.covergroupmodel method)": [[9, "vsc.model.covergroup_model.CovergroupModel.sample"]], "sample() (vsc.model.coverpoint_bin_array_model.coverpointbinarraymodel method)": [[9, "vsc.model.coverpoint_bin_array_model.CoverpointBinArrayModel.sample"]], "sample() (vsc.model.coverpoint_bin_collection_model.coverpointbincollectionmodel method)": [[9, "vsc.model.coverpoint_bin_collection_model.CoverpointBinCollectionModel.sample"]], "sample() (vsc.model.coverpoint_bin_enum_model.coverpointbinenummodel method)": [[9, "vsc.model.coverpoint_bin_enum_model.CoverpointBinEnumModel.sample"]], "sample() (vsc.model.coverpoint_bin_model_base.coverpointbinmodelbase method)": [[9, "vsc.model.coverpoint_bin_model_base.CoverpointBinModelBase.sample"]], "sample() (vsc.model.coverpoint_bin_single_bag_model.coverpointbinsinglebagmodel method)": [[9, "vsc.model.coverpoint_bin_single_bag_model.CoverpointBinSingleBagModel.sample"]], "sample() (vsc.model.coverpoint_bin_single_range_model.coverpointbinsinglerangemodel method)": [[9, "vsc.model.coverpoint_bin_single_range_model.CoverpointBinSingleRangeModel.sample"]], "sample() (vsc.model.coverpoint_bin_single_val_model.coverpointbinsinglevalmodel method)": [[9, "vsc.model.coverpoint_bin_single_val_model.CoverpointBinSingleValModel.sample"]], "sample() (vsc.model.coverpoint_cross_model.coverpointcrossmodel method)": [[9, "vsc.model.coverpoint_cross_model.CoverpointCrossModel.sample"]], "sample() (vsc.model.coverpoint_model.coverpointmodel method)": [[9, "vsc.model.coverpoint_model.CoverpointModel.sample"]], "select_unhit_bin() (vsc.model.coverpoint_cross_model.coverpointcrossmodel method)": [[9, "vsc.model.coverpoint_cross_model.CoverpointCrossModel.select_unhit_bin"]], "select_unhit_bin() (vsc.model.coverpoint_model.coverpointmodel method)": [[9, "vsc.model.coverpoint_model.CoverpointModel.select_unhit_bin"]], "set_bin_type() (vsc.model.coverpoint_bin_collection_model.coverpointbincollectionmodel method)": [[9, "vsc.model.coverpoint_bin_collection_model.CoverpointBinCollectionModel.set_bin_type"]], "set_bin_type() (vsc.model.coverpoint_bin_model_base.coverpointbinmodelbase method)": [[9, "vsc.model.coverpoint_bin_model_base.CoverpointBinModelBase.set_bin_type"]], "set_constraint_enabled() (vsc.model.constraint_block_model.constraintblockmodel method)": [[9, "vsc.model.constraint_block_model.ConstraintBlockModel.set_constraint_enabled"]], "set_field() (vsc.model.field_composite_model.fieldcompositemodel method)": [[9, "vsc.model.field_composite_model.FieldCompositeModel.set_field"]], "set_is_rand() (vsc.types.field_info method)": [[9, "vsc.types.field_info.set_is_rand"]], "set_model() (vsc.constraints.constraint_t method)": [[9, "vsc.constraints.constraint_t.set_model"]], "set_model() (vsc.constraints.dynamic_constraint_t method)": [[9, "vsc.constraints.dynamic_constraint_t.set_model"]], "set_target_value_cache() (vsc.model.coverpoint_cross_model.coverpointcrossmodel method)": [[9, "vsc.model.coverpoint_cross_model.CoverpointCrossModel.set_target_value_cache"]], "set_target_value_cache() (vsc.model.coverpoint_model.coverpointmodel method)": [[9, "vsc.model.coverpoint_model.CoverpointModel.set_target_value_cache"]], "set_used_rand() (vsc.model.field_composite_model.fieldcompositemodel method)": [[9, "vsc.model.field_composite_model.FieldCompositeModel.set_used_rand"]], "set_val() (vsc.coverage.coverpoint method)": [[9, "vsc.coverage.coverpoint.set_val"]], "set_val() (vsc.types.type_base method)": [[9, "vsc.types.type_base.set_val"]], "set_val() (vsc.types.type_bool method)": [[9, "vsc.types.type_bool.set_val"]], "set_val() (vsc.types.type_enum method)": [[9, "vsc.types.type_enum.set_val"]], "signed() (in module vsc.types)": [[9, "vsc.types.signed"]], "size (vsc.types.list_t property)": [[9, "vsc.types.list_t.size"]], "soft() (in module vsc.constraints)": [[9, "vsc.constraints.soft"]], "solve_order() (in module vsc.constraints)": [[9, "vsc.constraints.solve_order"]], "sum (vsc.types.list_t property)": [[9, "vsc.types.list_t.sum"]], "tostring() (vsc.model.rangelist_model.rangelistmodel method)": [[9, "vsc.model.rangelist_model.RangelistModel.toString"]], "to_expr() (in module vsc.types)": [[9, "vsc.types.to_expr"]], "to_expr() (vsc.constraints.foreach.idx_term_c method)": [[9, "vsc.constraints.foreach.idx_term_c.to_expr"]], "to_expr() (vsc.constraints.foreach.it_term_c method)": [[9, "vsc.constraints.foreach.it_term_c.to_expr"]], "to_expr() (vsc.types.list_t method)": [[9, "vsc.types.list_t.to_expr"]], "to_expr() (vsc.types.type_base method)": [[9, "vsc.types.type_base.to_expr"]], "type_base (class in vsc.types)": [[9, "vsc.types.type_base"]], "type_bool (class in vsc.types)": [[9, "vsc.types.type_bool"]], "type_enum (class in vsc.types)": [[9, "vsc.types.type_enum"]], "uint16_t (class in vsc.types)": [[9, "vsc.types.uint16_t"]], "uint32_t (class in vsc.types)": [[9, "vsc.types.uint32_t"]], "uint64_t (class in vsc.types)": [[9, "vsc.types.uint64_t"]], "uint8_t (class in vsc.types)": [[9, "vsc.types.uint8_t"]], "unique() (in module vsc.constraints)": [[9, "vsc.constraints.unique"]], "unsigned() (in module vsc.types)": [[9, "vsc.types.unsigned"]], "val (vsc.types.type_base property)": [[9, "vsc.types.type_base.val"]], "vsc.attrs": [[9, "module-vsc.attrs"]], "vsc.constraints": [[9, "module-vsc.constraints"]], "vsc.coverage": [[9, "module-vsc.coverage"]], "vsc.model.constraint_block_model": [[9, "module-vsc.model.constraint_block_model"]], "vsc.model.constraint_expr_model": [[9, "module-vsc.model.constraint_expr_model"]], "vsc.model.constraint_if_else_model": [[9, "module-vsc.model.constraint_if_else_model"]], "vsc.model.constraint_implies_model": [[9, "module-vsc.model.constraint_implies_model"]], "vsc.model.constraint_model": [[9, "module-vsc.model.constraint_model"]], "vsc.model.constraint_scope_model": [[9, "module-vsc.model.constraint_scope_model"]], "vsc.model.constraint_unique_model": [[9, "module-vsc.model.constraint_unique_model"]], "vsc.model.covergroup_model": [[9, "module-vsc.model.covergroup_model"]], "vsc.model.covergroup_registry": [[9, "module-vsc.model.covergroup_registry"]], "vsc.model.coverpoint_bin_array_model": [[9, "module-vsc.model.coverpoint_bin_array_model"]], "vsc.model.coverpoint_bin_collection_model": [[9, "module-vsc.model.coverpoint_bin_collection_model"]], "vsc.model.coverpoint_bin_enum_model": [[9, "module-vsc.model.coverpoint_bin_enum_model"]], "vsc.model.coverpoint_bin_model_base": [[9, "module-vsc.model.coverpoint_bin_model_base"]], "vsc.model.coverpoint_bin_single_bag_model": [[9, "module-vsc.model.coverpoint_bin_single_bag_model"]], "vsc.model.coverpoint_bin_single_range_model": [[9, "module-vsc.model.coverpoint_bin_single_range_model"]], "vsc.model.coverpoint_bin_single_val_model": [[9, "module-vsc.model.coverpoint_bin_single_val_model"]], "vsc.model.coverpoint_cross_model": [[9, "module-vsc.model.coverpoint_cross_model"]], "vsc.model.coverpoint_model": [[9, "module-vsc.model.coverpoint_model"]], "vsc.model.field_composite_model": [[9, "module-vsc.model.field_composite_model"]], "vsc.model.rangelist_model": [[9, "module-vsc.model.rangelist_model"]], "vsc.rand_obj": [[9, "module-vsc.rand_obj"]], "vsc.types": [[9, "module-vsc.types"]], "weight (class in vsc.constraints)": [[9, "vsc.constraints.weight"]], "wildcard_bin (class in vsc.coverage)": [[9, "vsc.coverage.wildcard_bin"]], "wildcard_bin_array (class in vsc.coverage)": [[9, "vsc.coverage.wildcard_bin_array"]]}})